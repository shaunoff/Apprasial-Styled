{"version":3,"sources":["../src/utils.js"],"names":["walkItemTree","reattachAll","attachAll","restoreRenderedStyles","saveRenderedStyles","itemTree","callback","walk","map","forEach","item","node","children","runningAnimations","animation","attach","savedAttributeNames","Object","keys","savedAttributes","setAttribute","name","i","attributes","length","indexOf","removeAttribute","attribute","value","_gsTransform","_gsTweenID"],"mappings":";;;;;QAAgBA,Y,GAAAA,Y;QAcAC,W,GAAAA,W;QAKAC,S,GAAAA,S;QAIAC,qB,GAAAA,qB;QAkBAC,kB,GAAAA,kB;AAzCT,SAASJ,YAAT,CAAsBK,QAAtB,EAAgCC,QAAhC,EAA0C;AAC/C,WAASC,IAAT,CAAcC,GAAd,EAAmB;AACjBA,QAAIC,OAAJ,CAAY,gBAAQ;AAClB,UAAIC,KAAKC,IAAT,EAAe;AACbL,iBAASI,IAAT;AACA,YAAIA,KAAKE,QAAT,EAAmB;AACjBL,eAAKG,KAAKE,QAAV;AACD;AACF;AACF,KAPD;AAQD;AACDL,OAAKF,QAAL;AACD;;AAEM,SAASJ,WAAT,CAAqBI,QAArB,EAA+BQ,iBAA/B,EAAkD;AACvDV,wBAAsBE,QAAtB;AACAH,YAAUW,iBAAV;AACD;;AAEM,SAASX,SAAT,CAAmBW,iBAAnB,EAAsC;AAC3CA,oBAAkBJ,OAAlB,CAA0B;AAAA,WAAaK,UAAUC,MAAV,EAAb;AAAA,GAA1B;AACD;;AAEM,SAASZ,qBAAT,CAA+BE,QAA/B,EAAyC;AAC9CL,eAAaK,QAAb,EAAuB,gBAAQ;AAC7B,QAAMW,sBAAsBC,OAAOC,IAAP,CAAYR,KAAKS,eAAL,IAAwB,EAApC,CAA5B;AACA;AACAH,wBAAoBP,OAApB,CAA4B,gBAAQ;AAClCC,WAAKC,IAAL,CAAUS,YAAV,CAAuBC,IAAvB,EAA6BX,KAAKS,eAAL,CAAqBE,IAArB,CAA7B;AACD,KAFD;AAGA;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIZ,KAAKC,IAAL,CAAUY,UAAV,CAAqBC,MAAzC,EAAiD,EAAEF,CAAnD,EAAsD;AACpD,UAAMD,OAAOX,KAAKC,IAAL,CAAUY,UAAV,CAAqBD,CAArB,EAAwBD,IAArC;AACA,UAAIL,oBAAoBS,OAApB,CAA4BJ,IAA5B,MAAsC,CAAC,CAA3C,EAA8C;AAC5CX,aAAKC,IAAL,CAAUe,eAAV,CAA0BL,IAA1B;AACA,UAAEC,CAAF;AACD;AACF;AACF,GAdD;AAeD;;AAEM,SAASlB,kBAAT,CAA4BC,QAA5B,EAAsC;AAC3CL,eAAaK,QAAb,EAAuB,gBAAQ;AAC7BK,SAAKS,eAAL,GAAuB,EAAvB;AACA,SAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAIZ,KAAKC,IAAL,CAAUY,UAAV,CAAqBC,MAAzC,EAAiD,EAAEF,CAAnD,EAAsD;AACpD,UAAMK,YAAYjB,KAAKC,IAAL,CAAUY,UAAV,CAAqBD,CAArB,CAAlB;AACA,UAAMD,OAAOM,UAAUN,IAAvB;AACA,UAAMO,QAAQD,UAAUC,KAAxB;AACAlB,WAAKS,eAAL,CAAqBE,IAArB,IAA6BO,KAA7B;AACD;AACDlB,SAAKC,IAAL,CAAUkB,YAAV,GAAyB,IAAzB;AACAnB,SAAKC,IAAL,CAAUmB,UAAV,GAAuB,IAAvB;AACD,GAVD;AAWD","file":"utils.js","sourcesContent":["export function walkItemTree(itemTree, callback) {\n  function walk(map) {\n    map.forEach(item => {\n      if (item.node) {\n        callback(item)\n        if (item.children) {\n          walk(item.children)\n        }\n      }\n    })\n  }\n  walk(itemTree)\n}\n\nexport function reattachAll(itemTree, runningAnimations) {\n  restoreRenderedStyles(itemTree)\n  attachAll(runningAnimations)\n}\n\nexport function attachAll(runningAnimations) {\n  runningAnimations.forEach(animation => animation.attach())\n}\n\nexport function restoreRenderedStyles(itemTree) {\n  walkItemTree(itemTree, item => {\n    const savedAttributeNames = Object.keys(item.savedAttributes || {})\n    //restore the original attribute values\n    savedAttributeNames.forEach(name => {\n      item.node.setAttribute(name, item.savedAttributes[name])\n    })\n    //remove the attributes added after the render\n    for (let i = 0; i < item.node.attributes.length; ++i) {\n      const name = item.node.attributes[i].name\n      if (savedAttributeNames.indexOf(name) === -1) {\n        item.node.removeAttribute(name)\n        --i\n      }\n    }\n  })\n}\n\nexport function saveRenderedStyles(itemTree) {\n  walkItemTree(itemTree, item => {\n    item.savedAttributes = {}\n    for (let i = 0; i < item.node.attributes.length; ++i) {\n      const attribute = item.node.attributes[i]\n      const name = attribute.name\n      const value = attribute.value\n      item.savedAttributes[name] = value\n    }\n    item.node._gsTransform = null\n    item.node._gsTweenID = null\n  })\n}\n"]}